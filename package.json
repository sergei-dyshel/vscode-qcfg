{
  "name": "vscode-qcfg",
  "displayName": "vscode-qcfg",
  "description": "My personal extension",
  "version": "0.0.2",
  "publisher": "QyRoN",
  "repository": {
    "type": "git",
    "url": "https://github.com/sergei-dyshel/qyron-config.git"
  },
  "engines": {
    "vscode": "^1.31.0"
  },
  "enableProposedApi": true,
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./dist/extension",
  "contributes": {
    "commands": [
      {
        "command": "qcfg.toggleReadOnly",
        "title": "qcfg: Toggle workspace READ-ONLY"
      },
      {
        "command": "qcfg.terminal.inWorkspaceFolder",
        "title": "qcfg: Open terminal in current workspace folder"
      },
      {
        "command": "qcfg.runCommand",
        "title": "qcfg: Run command"
      },
      {
        "command": "qcfg.terminal.inFileFolder",
        "title": "qcfg: Open terminal in current file's folder"
      },
      {
        "command": "qcfg.gtags.workspace",
        "title": "qcfg: Show gtags for entire workspace"
      },
      {
        "command": "qcfg.gtags.definition",
        "title": "qcfg: Open gtags definition"
      },
      {
        "command": "qcfg.search.word",
        "title": "qcfg: Search current word in workspace"
      },
      {
        "command": "qcfg.search.structField",
        "title": "qcfg: Search current struct field in workspace"
      },
      {
        "command": "qcfg.colors.select",
        "title": "qcfg: Select workspace color theme"
      },
      {
        "command": "qcfg.colors.persist",
        "title": "qcfg: Persist workspace color theme"
      },
      {
        "command": "qcfg.colors.clear",
        "title": "qcfg: Clear workspace color theme"
      },
      {
        "command": "qcfg.log.debug",
        "title": "qcfg: Set log level to DEBUG"
      },
      {
        "command": "qcfg.log.info",
        "title": "qcfg: Set log level to INFO"
      },
      {
        "command": "qcfg.log.trace",
        "title": "qcfg: Set log level to TRACE"
      },
      {
        "command": "qcfg.history.backward",
        "title": "qcfg: Go backward in history"
      },
      {
        "command": "qcfg.tasks.show",
        "title": "qcfg: Show list of tasks"
      },
      {
        "command": "qcfg.tasks.runQcfg",
        "title": "qcfg: Run specific task"
      },
      {
        "command": "qcfg.tasks.build.last",
        "title": "qcfg: Run last build task"
      },
      {
        "command": "qcfg.tasks.build.default",
        "title": "qcfg: Run default build task"
      },
      {
        "command": "qcfg.alternate.switch",
        "title": "qcfg: Switch to alternate file"
      },
      {
        "command": "qcfg.selection.previous",
        "title": "qcfg: Select previous selection"
      },
      {
        "command": "qcfg.selection.expand",
        "title": "qcfg: Expand selection"
      },
      {
        "command": "qcfg.selection.selectSuperParent",
        "title": "qcfg: Select super parent"
      },
      {
        "command": "qcfg.selection.expand",
        "title": "qcfg: Expand selection"
      },
      {
        "command": "qcfg.selection.shrink",
        "title": "qcfg: Shrink selection"
      },
      {
        "command": "qcfg.selection.right",
        "title": "qcfg: Move selection right"
      },
      {
        "command": "qcfg.selection.left",
        "title": "qcfg: Move selection left"
      },
      {
        "command": "qcfg.selection.swapRight",
        "title": "qcfg: Swap selected node with right sibling"
      },
      {
        "command": "qcfg.selection.swapLeft",
        "title": "qcfg: Swap selected node with left sibling"
      },
      {
        "command": "qcfg.selection.extendRight",
        "title": "qcfg: Extend selection right"
      },
      {
        "command": "qcfg.selection.extendLeft",
        "title": "qcfg: extend selection left"
      },
      {
        "command": "qcfg.autoSync.toggle",
        "title": "qcfg: AutoSync toggle"
      },
      {
        "command": "qcfg.selectLines",
        "title": "qcfg: Select lines"
      },
      {
        "command": "qcfg.swapCursorAndAnchor",
        "title": "qcfg: Swap cursor and anchor"
      },
      {
        "command": "qcfg.cloneEditorBeside",
        "title": "qcfg: Clone editor to side"
      },
      {
        "command": "qcfg.smartPaste",
        "title": "qcfg: Smart paste"
      },
      {
        "command": "qcfg.surroundWith",
        "title": "qcfg: Surround text with..."
      },
      {
        "command": "qcfg.navigateBackToPreviousFile",
        "title": "qcfg: Navigate back to previous file"
      }
    ],
    "keybindings": [
      {
        "key": "ctrl+shift+;",
        "command": "qcfg.runCommand"
      },
      {
        "key": "ctrl+u",
        "command": "qcfg.gtags.workspace"
      },
      {
        "key": "alt+d",
        "command": "qcfg.gtags.definition"
      },
      {
        "key": "alt+r",
        "command": "qcfg.search.word",
        "when": "editorFocus && !findWidgetVisible"
      },
      {
        "key": "alt+shift+r",
        "command": "qcfg.search.structField"
      },
      {
        "key": "alt+t",
        "command": "qcfg.tasks.show"
      },
      {
        "key": "ctrl+k ctrl+b",
        "command": "qcfg.tasks.build.last"
      },
      {
        "key": "ctrl+k ctrl+shift+b",
        "command": "qcfg.tasks.build.default"
      }
    ],
    "configuration": {
      "title": "Qcfg configuration",
      "properties": {
        "qcfg.log.level": {
          "type": "string",
          "description": "Log level",
          "enum": [
            "debug",
            "info",
            "warning"
          ]
        },
        "qcfg.tasks.global": {
          "type": "object",
          "description": "Tasks in qcfg format",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string"
                  },
                  "reveal": {
                    "type": "string",
                    "enum": [
                      "focus",
                      "yes",
                      "no"
                    ],
                    "default": "yes"
                  },
                  "flags": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "dedicatedPanel",
                        "clear",
                        "autoRestart",
                        "reindex",
                        "build"
                      ]
                    }
                  },
                  "onSuccess": {
                    "type": "string",
                    "default": "auto",
                    "enum": [
                      "none",
                      "auto",
                      "hide",
                      "dispose",
                      "show",
                      "notify"
                    ]
                  },
                  "onFailure": {
                    "type": "string",
                    "default": "auto",
                    "enum": [
                      "none",
                      "auto",
                      "hide",
                      "dispose",
                      "show",
                      "notify"
                    ]
                  },
                  "problemMatchers": {
                    "anyOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "default": []
                      },
                      {
                        "type": "string"
                      }
                    ]
                  }
                },
                "required": [
                  "command"
                ]
              },
              {
                "type": "string",
                "description": "Command to run with default task params"
              }
            ]
          }
        },
        "qcfg.tasks.workspace": {
          "type": "object",
          "description": "Tasks in qcfg format",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string"
                  },
                  "reveal": {
                    "type": "string",
                    "enum": [
                      "focus",
                      "yes",
                      "no"
                    ],
                    "default": "yes"
                  },
                  "flags": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "dedicatedPanel",
                        "clear",
                        "autoRestart",
                        "reindex",
                        "build"
                      ]
                    }
                  },
                  "onSuccess": {
                    "type": "string",
                    "default": "auto",
                    "enum": [
                      "none",
                      "auto",
                      "hide",
                      "dispose",
                      "show",
                      "notify"
                    ]
                  },
                  "onFailure": {
                    "type": "string",
                    "default": "auto",
                    "enum": [
                      "none",
                      "auto",
                      "hide",
                      "dispose",
                      "show",
                      "notify"
                    ]
                  },
                  "problemMatchers": {
                    "anyOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "default": []
                      },
                      {
                        "type": "string"
                      }
                    ]
                  }
                },
                "required": [
                  "command"
                ]
              },
              {
                "type": "string",
                "description": "Command to run with default task params"
              }
            ]
          }
        },
        "qcfg.alternate.mapping": {
          "type": "object",
          "description": "Mapping for alternate (header/source)",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "qcfg.autoSync.enabled": {
          "type": "boolean",
          "description": "AutoSync enabled on start",
          "default": false
        },
        "qcfg.autoSync.command": {
          "type": "string",
          "description": "AutoSync command"
        }
      }
    },
    "problemMatchers": [
      {
        "name": "e8build",
        "owner": "qcfg",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "severity": "warning",
        "pattern": {
          "regexp": "^(.*?):(\\d+):((\\d+):)?\\s+(fatal error|warning|error|note):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 4,
          "message": 6
        }
      },
      {
        "name": "gcc-relative",
        "owner": "qcfg",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "tsc-compile": "tsc -p .",
    "compile": "webpack --mode none",
    "tsc-watch": "tsc -watch -p ./",
    "watch": "webpack --mode none --watch",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "npm run compile && node ./node_modules/vscode/bin/test",
    "check": "gts check",
    "clean": "gts clean",
    "fix": "gts fix",
    "prepare": "npm run compile",
    "pretest": "npm run compile",
    "posttest": "npm run check"
  },
  "dependencies": {
    "clipboardy": "^1.2.3",
    "node-loader": "^0.6.0",
    "re2": "^1.8.4",
    "shlex": "^1.0.3",
    "superstring": "^2.3.4",
    "tree-sitter": "^0.13.23",
    "tree-sitter-cpp": "^0.13.11",
    "tree-sitter-python": "^0.13.6",
    "tree-sitter-typescript": "^0.13.6",
    "typescript-collections": "^1.1.4"
  },
  "devDependencies": {
    "@types/clipboardy": "^1.1.0",
    "@types/mocha": "^2.2.42",
    "@types/node": "^8.10.39",
    "deepmerge": "^3.1.0",
    "gts": "^0.9.0",
    "json-merger": "^1.0.2",
    "ts-loader": "^6.0.1",
    "ts-node": "^7.0.1",
    "tslint": "^5.12.1",
    "typescript": "^3.2.2",
    "vscode": "^1.1.26",
    "vscode-languageclient": "^5.2.1",
    "vscode-languageserver": "^5.2.1",
    "webpack": "^4.32.2",
    "webpack-cli": "^3.3.2"
  }
}
