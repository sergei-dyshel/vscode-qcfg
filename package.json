{
  "name": "vscode-qcfg",
  "displayName": "vscode-qcfg",
  "description": "My personal extension",
  "version": "0.0.18",
  "publisher": "QyRoN",
  "repository": {
    "type": "git",
    "url": "https://github.com/sergei-dyshel/qyron-config.git"
  },
  "engines": {
    "vscode": "^1.71.0"
  },
  "enabledApiProposals": [
    "textSearchProvider",
    "findTextInFiles",
    "quickPickSortByLabel"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "workspaceContains:**",
    "onStartupFinished"
  ],
  "license": "MIT",
  "main": "./dist/extension",
  "scripts": {
    "vscode:prepublish": "make prepublish",
    "compile": "make compile",
    "tsc-watch": "tsc -watch -p ./",
    "tsc-compile": "tsc -p .",
    "webpack-watch": "webpack --mode none --watch",
    "test": "npm run compile && node ./node_modules/vscode/bin/test",
    "check": "gts check",
    "clean": "gts clean",
    "fix": "gts fix",
    "prepare": "npm run compile",
    "pretest": "npm run compile",
    "posttest": "npm run check"
  },
  "dependencies": {
    "@rushstack/ts-command-line": "^4.7.6",
    "callsites": "^3.1.0",
    "case-anything": "^2.1.10",
    "chokidar": "^3.4.3",
    "glob": "^7.1.6",
    "jayson": "^3.3.4",
    "jsonc-parser": "^2.3.1",
    "lodash": "^4.17.20",
    "luxon": "^1.27.0",
    "minimatch": "^3.0.4",
    "node-loader": "^2.0.0",
    "npm-check-updates": "^13.1.4",
    "shell-quote": "^1.7.2",
    "shlex": "^2.0.2",
    "simple-git": "^3.18.0",
    "source-map-support": "^0.5.19",
    "sprintf-js": "^1.1.2",
    "string-format": "^2.0.0",
    "superstring": "github:sergei-dyshel/superstring#master-next",
    "tempy": "^1.0.0",
    "tree-sitter": "file:local/tree-sitter.tgz",
    "tree-sitter-bash": "^0.19.0",
    "tree-sitter-c": "^0.19.0",
    "tree-sitter-cpp": "^0.19.0",
    "tree-sitter-go": "^0.19.1",
    "tree-sitter-javascript": "^0.19.0",
    "tree-sitter-json": "^0.19.0",
    "tree-sitter-lua": "^2.1.3",
    "tree-sitter-python": "^0.19.0",
    "tree-sitter-typescript": "^0.19.0",
    "tree-sitter-yaml": "^0.5.0",
    "ts-enum-util": "^4.0.2",
    "typescript-collections": "^1.3.3",
    "vscode-languageclient": "^6.1.3"
  },
  "devDependencies": {
    "@types/circular-dependency-plugin": "^5.0.5",
    "@types/glob": "^7.1.3",
    "@types/lodash": "^4.14.165",
    "@types/luxon": "^1.27.0",
    "@types/minimatch": "^3.0.3",
    "@types/mocha": "^8.0.3",
    "@types/node": "^14.18.21",
    "@types/shell-quote": "^1.7.0",
    "@types/source-map-support": "^0.5.3",
    "@types/sprintf-js": "^1.1.2",
    "@types/string-format": "^2.0.0",
    "@types/vscode": "^1.71.0",
    "@types/webpack-env": "^1.17.0",
    "@typescript-eslint/eslint-plugin": "^5.38.1",
    "@typescript-eslint/parser": "^5.38.1",
    "@vscode/test-electron": "^2.1.5",
    "circular-dependency-plugin": "^5.2.2",
    "deepmerge": "^4.2.2",
    "eslint": "^8.24.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-prettier": "^8.5.0",
    "eslint-import-resolver-typescript": "^2.7.1",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jsx-a11y": "^6.5.1",
    "eslint-plugin-only-warn": "^1.0.3",
    "eslint-plugin-react": "^7.30.0",
    "eslint-plugin-react-hooks": "^4.5.0",
    "eslint-plugin-sonarjs": "^0.13.0",
    "eslint-plugin-unicorn": "^43.0.1",
    "gts": "^3.0.2",
    "ifdef-loader": "^2.1.5",
    "json-merger": "^1.1.9",
    "prettier": "^2.6.2",
    "prettier-plugin-organize-imports": "^3.0.0",
    "ts-json-schema-generator": "^1.1.2",
    "ts-loader": "^9.3.0",
    "ts-node": "^10.9.1",
    "ts-prune": "^0.8.4",
    "ts-unused-exports": "^6.2.4",
    "tsconfig-paths": "^4.0.0",
    "typescript": "^4.8.4",
    "vscode-languageserver": "^6.1.1",
    "webpack": "^5.4.0",
    "webpack-cli": "^4.2.0"
  },
  "contributes": {
    "problemMatchers": [
      {
        "name": "gcc-relative",
        "owner": "qcfg",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "severity": "warning",
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "message": 5
        }
      },
      {
        "name": "gcc-absolute",
        "owner": "qcfg",
        "fileLocation": "absolute",
        "severity": "warning",
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "message": 5
        }
      },
      {
        "name": "qcfg-go",
        "owner": "qcfg",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "severity": "warning",
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+): (.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "message": 4
        }
      }
    ],
    "languages": [
      {
        "id": "qcfg-log",
        "aliases": [
          "vscode-qcfg log"
        ],
        "extensions": [
          ".vscode-qcfg.log"
        ]
      },
      {
        "id": "plist-old",
        "filenames": [
          "DefaultKeyBinding.Dict"
        ],
        "configuration": "./plistOld.language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "qcfg-log",
        "scopeName": "text.log.qcfg-log",
        "path": "./syntaxes/qcfg-log.tmLanguage.json"
      },
      {
        "language": "plist-old",
        "scopeName": "source.plist",
        "path": "./syntaxes/Property List (Old-Style).tmLanguage.txt"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "qcfg-views-container",
          "title": "Qcfg",
          "icon": "$(zap)"
        }
      ]
    },
    "views": {
      "qcfg-views-container": [
        {
          "id": "qcfgTreeView",
          "name": "Custom tree",
          "type": "tree"
        }
      ]
    },
    "menus": {
      "view/item/context": [
        {
          "command": "qcfg.treeView.removeNode",
          "when": "view == qcfgTreeView && viewItem == removable",
          "group": "inline"
        },
        {
          "command": "qcfg.treeView.expandNode",
          "when": "view == qcfgTreeView",
          "group": "inline"
        }
      ],
      "explorer/context": [
        {
          "command": "qcfg.explorer.format"
        },
        {
          "command": "qcfg.explorer.organizeImports"
        }
      ],
      "scm/resourceState/context": [
        {
          "command": "qcfg.scm.format"
        }
      ]
    },
    "commands": [
      {
        "command": "qcfg.alternate.switch",
        "title": "qcfg: Switch to alternate file"
      },
      {
        "title": "qcfg: Toggle auto-resize",
        "command": "qcfg.autoResize.toggle"
      },
      {
        "command": "qcfg.autoSync.toggle",
        "title": "qcfg: AutoSync toggle"
      },
      {
        "command": "qcfg.block.goDown",
        "title": "qcfg: Jump down to the start of nearest block"
      },
      {
        "command": "qcfg.block.goUp",
        "title": "qcfg: Jump up to the start of nearest block"
      },
      {
        "command": "qcfg.block.selectDown",
        "title": "qcfg: Select down to the start of nearest block"
      },
      {
        "command": "qcfg.block.selectUp",
        "title": "qcfg: Select up to the start of nearest block"
      },
      {
        "command": "qcfg.ccls.assignments",
        "title": "qcfg: ccls - find assignments"
      },
      {
        "command": "qcfg.ccls.specificRefs",
        "title": "qcfg: ccls - find specific references"
      },
      {
        "command": "qcfg.clangd.dumpAST",
        "title": "qcfg: Clangd - dump AST"
      },
      {
        "command": "qcfg.codeActions.autoFixFile",
        "title": "qcfg: Choose and apply quick fixes for current file"
      },
      {
        "command": "qcfg.codeActions.autoFixWorkspace",
        "title": "qcfg: Choose and apply quick fixes for entire workspace"
      },
      {
        "command": "qcfg.codeActions.dumpFile",
        "title": "qcfg: Dump code actions for current file"
      },
      {
        "command": "qcfg.colors.clear",
        "title": "qcfg: Clear workspace color theme"
      },
      {
        "command": "qcfg.colors.inspect",
        "title": "qcfg: Open color theme file"
      },
      {
        "command": "qcfg.colors.persist",
        "title": "qcfg: Persist workspace color theme"
      },
      {
        "command": "qcfg.colors.select",
        "title": "qcfg: Select workspace color theme"
      },
      {
        "command": "qcfg.edit.lastLocation",
        "title": "qcfg: Go to last edit location"
      },
      {
        "command": "qcfg.edit.next",
        "title": "qcfg: Select next text edit"
      },
      {
        "command": "qcfg.edit.previous",
        "title": "qcfg: Select previous text edit"
      },
      {
        "command": "qcfg.errors.toggleMessages",
        "title": "qcfg: Toggle displaying qcfg errors as messages"
      },
      {
        "command": "qcfg.expandSelectionFaster",
        "title": "qcfg: Expand selection faster"
      },
      {
        "command": "qcfg.explorer.format",
        "title": "Format",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
      },
      {
        "command": "qcfg.explorer.organizeImports",
        "title": "Organize imports",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
      },
      {
        "command": "qcfg.focusEditorBeside",
        "title": "qcfg: Focus editor beside"
      },
      {
        "command": "qcfg.fuzzySearch",
        "title": "qcfg: Fuzzy search lines"
      },
      {
        "command": "qcfg.git.dump",
        "title": "qcfg: Git - dump info"
      },
      {
        "command": "qcfg.git.weblinks",
        "title": "qcfg: Git - Web links"
      },
      {
        "command": "qcfg.goToDefinition",
        "title": "qcfg: Go to definition"
      },
      {
        "command": "qcfg.gtags.definition",
        "title": "qcfg: Open gtags definition (current folder and up)"
      },
      {
        "command": "qcfg.gtags.workspace",
        "title": "qcfg: Show gtags for entire workspace"
      },
      {
        "command": "qcfg.history.backward",
        "title": "qcfg: Go backward in history"
      },
      {
        "command": "qcfg.history.forward",
        "title": "qcfg: Go forward in history"
      },
      {
        "command": "qcfg.history.wrapCmd",
        "title": "qcfg: Update history after running command (passed as argument)"
      },
      {
        "command": "qcfg.historyWrap.gotoSymbol",
        "category": "qcfg",
        "title": "Go to Symbol in File..."
      },
      {
        "command": "qcfg.historyWrap.openPreviousEditorFromHistory",
        "category": "qcfg",
        "title": "Quick Open Previous Editor from History"
      },
      {
        "command": "qcfg.historyWrap.quickOpen",
        "category": "qcfg",
        "title": "Go to file..."
      },
      {
        "command": "qcfg.historyWrap.showAllSymbols",
        "category": "qcfg",
        "title": "Go to Symbol in Workspace..."
      },
      {
        "command": "qcfg.insertPath",
        "title": "qcfg: Show open file dialog and insert resulting path"
      },
      {
        "command": "qcfg.jump2line",
        "category": "qcfg",
        "title": "Jump to line"
      },
      {
        "command": "qcfg.langClient.compare",
        "title": "qcfg: Compare language clients on current symbol"
      },
      {
        "command": "qcfg.langClient.refresh",
        "title": "qcfg: Refresh language clients"
      },
      {
        "command": "qcfg.langClient.refreshOrRestart",
        "title": "qcfg: Refresh or restart language clients"
      },
      {
        "command": "qcfg.langClient.restart",
        "title": "qcfg: Restart language clients"
      },
      {
        "command": "qcfg.langClient.stop",
        "title": "qcfg: Stop language clients"
      },
      {
        "command": "qcfg.log.setHandlerLevel.console",
        "title": "qcfg: Select log level for CONSOLE handler"
      },
      {
        "command": "qcfg.log.setHandlerLevel.file",
        "title": "qcfg: Select log level for FILE handler"
      },
      {
        "command": "qcfg.log.setHandlerLevel.output",
        "title": "qcfg: Select log level for OUTPUT PANEL handler"
      },
      {
        "command": "qcfg.log.show",
        "title": "qcfg: Show output panel with log"
      },
      {
        "command": "qcfg.multipleSelection.moveMarkDown",
        "title": "qcfg: Multiple selections - mark next"
      },
      {
        "command": "qcfg.multipleSelection.moveMarkUp",
        "title": "qcfg: Multiple selections - mark prev"
      },
      {
        "command": "qcfg.multipleSelection.resetToMark",
        "title": "qcfg: Multiple selections - reset selection to mark"
      },
      {
        "command": "qcfg.multipleSelection.unselectMarked",
        "title": "qcfg: Multiple selections - unselect marked"
      },
      {
        "command": "qcfg.navigateBackToPreviousFile",
        "title": "qcfg: Navigate back to previous file"
      },
      {
        "command": "qcfg.newNote",
        "title": "qcfg: New note"
      },
      {
        "command": "qcfg.openInExternalApp",
        "title": "qcfg: Open in external application"
      },
      {
        "command": "qcfg.openRealPath",
        "title": "qcfg: Open current file with its real path"
      },
      {
        "command": "qcfg.openRecent.newWindow",
        "title": "qcfg: Open recent workspace (NEW window)"
      },
      {
        "command": "qcfg.openRecent.sameWindow",
        "title": "qcfg: Open recent workspace (SAME window)"
      },
      {
        "command": "qcfg.peekFlatOutline",
        "title": "qcfg: Peek document outline (flat)"
      },
      {
        "command": "qcfg.peekReferences",
        "title": "qcfg: Peek references"
      },
      {
        "command": "qcfg.persistent.backupGlobal",
        "title": "qcfg: Backup GLOBAL persistent state"
      },
      {
        "command": "qcfg.persistent.browseGlobal",
        "title": "qcfg: Browse GLOBAL persistent state"
      },
      {
        "command": "qcfg.persistent.browseWorkspace",
        "title": "qcfg: Browse WORKSPACE persistent state"
      },
      {
        "command": "qcfg.persistent.openGlobalStorage",
        "title": "qcfg: Open GLOBAL persistent storage folder"
      },
      {
        "command": "qcfg.persistent.restoreGlobal",
        "title": "qcfg: Restore GLOBAL persistent state"
      },
      {
        "title": "qcfg: Show search last locations in quick pick",
        "command": "qcfg.quickPickLastLocations"
      },
      {
        "command": "qcfg.remote.setDefault",
        "title": "qcfg: Set as default remote server"
      },
      {
        "command": "qcfg.renameReferences",
        "title": "qcfg: Rename all references of current symbol"
      },
      {
        "command": "qcfg.renameReferences.withConfirmation",
        "title": "qcfg: Rename all references of current symbol (with confirmation)"
      },
      {
        "title": "qcfg: Rerun last search",
        "command": "qcfg.rerunLastSearch"
      },
      {
        "title": "qcfg: Rerun one of previous searches",
        "command": "qcfg.rerunPreviousSearch"
      },
      {
        "command": "qcfg.resolveCompletions",
        "title": "qcfg: Resolve completions (and dump to console)"
      },
      {
        "command": "qcfg.runCommand",
        "title": "qcfg: Run command"
      },
      {
        "command": "qcfg.scm.format",
        "title": "Format selected files"
      },
      {
        "title": "qcfg: Find definitions using gtags/ctags",
        "command": "qcfg.search.GtagsCtagsDefinition"
      },
      {
        "title": "qcfg: Search declarations",
        "command": "qcfg.search.declarations"
      },
      {
        "title": "qcfg: Search definitions",
        "command": "qcfg.search.definitions"
      },
      {
        "title": "qcfg: Search implementations",
        "command": "qcfg.search.implementations"
      },
      {
        "title": "qcfg: Search proper references",
        "command": "qcfg.search.properReferences"
      },
      {
        "title": "qcfg: Search references",
        "command": "qcfg.search.references"
      },
      {
        "title": "qcfg: Search selected text (CURRENT workspace folder only)",
        "command": "qcfg.search.selectedText"
      },
      {
        "title": "qcfg: Search selected text (ALL workspace folders)",
        "command": "qcfg.search.selectedText.allFolders"
      },
      {
        "command": "qcfg.search.todos",
        "title": "qcfg: search ToDos"
      },
      {
        "command": "qcfg.search.word",
        "title": "qcfg: Search word under cursor (CURRENT workspace folder only)"
      },
      {
        "command": "qcfg.search.word.allFolders",
        "title": "qcfg: Search word under cursor (ALL workspace folders)"
      },
      {
        "title": "qcfg: Select search last locations in current editor",
        "command": "qcfg.selectLastLocations"
      },
      {
        "command": "qcfg.selectLines",
        "title": "qcfg: Select lines"
      },
      {
        "command": "qcfg.selectReferences",
        "title": "qcfg: Select references in current document"
      },
      {
        "command": "qcfg.selectWordUnderCursor",
        "title": "qcfg: Select word under cursor"
      },
      {
        "command": "qcfg.semanticHighlight.dump",
        "title": "qcfg: Dump semantic tokens on selection"
      },
      {
        "command": "qcfg.showCallHierarchy",
        "title": "qcfg: Peek Call Hierarchy"
      },
      {
        "command": "qcfg.showCallHierarchyInPanel",
        "title": "qcfg: Show call hierachy in side panel"
      },
      {
        "command": "qcfg.showInFileManager",
        "title": "qcfg: Show in OS file manager"
      },
      {
        "title": "qcfg: Show search last locations in panel",
        "command": "qcfg.showLastLocationsInPanel"
      },
      {
        "command": "qcfg.showTypeHierarchy",
        "title": "qcfg: Peek Type Hierarchy"
      },
      {
        "command": "qcfg.shrinkSelectionFaster",
        "title": "qcfg: Shrink selection faster"
      },
      {
        "command": "qcfg.smartCopy",
        "title": "qcfg: Smart copy"
      },
      {
        "command": "qcfg.smartPaste",
        "title": "qcfg: Smart paste"
      },
      {
        "command": "qcfg.stripBrackets",
        "title": "qcfg: Stripe brackets/quotes etc."
      },
      {
        "command": "qcfg.surroundWith",
        "title": "qcfg: Surround text with..."
      },
      {
        "command": "qcfg.swapCursorAndAnchor",
        "title": "qcfg: Swap cursor and anchor"
      },
      {
        "command": "qcfg.swapWithMark",
        "title": "qcfg: Swap selection and marked text"
      },
      {
        "command": "qcfg.syg",
        "category": "qcfg",
        "title": "Syg"
      },
      {
        "command": "qcfg.syncToEditorBeside",
        "title": "qcfg: Sync position to editor beside"
      },
      {
        "command": "qcfg.syntaxTree.show",
        "title": "qcfg: Show syntax tree in side panel"
      },
      {
        "command": "qcfg.tasks.build.default",
        "category": "qcfg",
        "title": "Run default build task"
      },
      {
        "command": "qcfg.tasks.build.last",
        "category": "qcfg",
        "title": "Run last build task"
      },
      {
        "command": "qcfg.tasks.show",
        "category": "qcfg",
        "title": "Show list of tasks"
      },
      {
        "command": "qcfg.terminal.inFileFolder",
        "title": "qcfg: Open terminal in current file's folder"
      },
      {
        "command": "qcfg.terminal.inWorkspaceFolder",
        "title": "qcfg: Open terminal in current workspace folder"
      },
      {
        "command": "qcfg.toggleReadOnly",
        "title": "qcfg: Toggle workspace READ-ONLY"
      },
      {
        "command": "qcfg.toggleRelativeLineNumbers",
        "title": "qcfg: Toggle relative line numbers"
      },
      {
        "command": "qcfg.treeMode.enter",
        "title": "qcfg: Tree mode - enter"
      },
      {
        "command": "qcfg.treeMode.exit",
        "title": "qcfg: Tree mode - exit"
      },
      {
        "command": "qcfg.treeMode.extentSelection",
        "title": "qcfg: Tree mode - extend selection to sibling node (left/right/first/last)"
      },
      {
        "command": "qcfg.treeMode.moveSelection",
        "title": "qcfg: Tree mode - swap selected nodes left/right"
      },
      {
        "command": "qcfg.treeMode.reverseSelection",
        "title": "qcfg: Tree mode - reverse selection"
      },
      {
        "command": "qcfg.treeMode.selectAdjacent",
        "title": "qcfg: Tree mode - select sibling node (left/right/first/last)"
      },
      {
        "command": "qcfg.treeMode.selectParent",
        "title": "qcfg: Tree mode - select parent node"
      },
      {
        "command": "qcfg.treeMode.selectParentListItem",
        "title": "qcfg: Tree mode - select parent list item"
      },
      {
        "command": "qcfg.treeMode.shrink",
        "title": "qcfg: Tree mode - shrink selection"
      },
      {
        "command": "qcfg.treeView.expandNode",
        "title": "Expand",
        "enablement": "view == qcfgTreeView",
        "icon": "$(expand-all)"
      },
      {
        "command": "qcfg.treeView.removeNode",
        "title": "Remove",
        "enablement": "view == qcfgTreeView && viewItem == removable",
        "icon": "$(close)"
      },
      {
        "command": "qcfg.window.focus",
        "title": "qcfg: Focus window"
      },
      {
        "command": "qcfg.wrapWithBracketsInline",
        "title": "qcfg: Wrap with brackets (if/for...)"
      }
    ],
    "keybindings": [
      {
        "key": "cmd+j",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
      },
      {
        "key": "cmd+shift+j",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
      },
      {
        "key": "alt+a",
        "command": "qcfg.alternate.switch"
      },
      {
        "key": "alt+down",
        "command": "qcfg.block.goDown",
        "when": "editorTextFocus && !qcfgTreeMode"
      },
      {
        "key": "alt+up",
        "command": "qcfg.block.goUp",
        "when": "editorTextFocus && !qcfgTreeMode"
      },
      {
        "key": "alt+shift+down",
        "command": "qcfg.block.selectDown",
        "when": "editorTextFocus"
      },
      {
        "key": "alt+shift+up",
        "command": "qcfg.block.selectUp",
        "when": "editorTextFocus"
      },
      {
        "key": "alt+.",
        "command": "qcfg.codeActions.autoFixFile"
      },
      {
        "key": "shift+alt+.",
        "command": "qcfg.codeActions.autoFixWorkspace"
      },
      {
        "key": "cmd+m",
        "command": "qcfg.edit.lastLocation",
        "when": "editorFocus"
      },
      {
        "key": "alt+i",
        "command": "qcfg.edit.next",
        "when": "editorFocus"
      },
      {
        "key": "alt+o",
        "command": "qcfg.edit.previous",
        "when": "editorFocus"
      },
      {
        "key": "cmd+down",
        "command": "qcfg.emptyCommand",
        "when": "editorTextFocus && qcfgTreeMode"
      },
      {
        "key": "cmd+alt+j",
        "command": "qcfg.expandSelectionFaster",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+space",
        "mac": "cmd+space",
        "command": "qcfg.focusEditorBeside"
      },
      {
        "key": "ctrl+l",
        "mac": "cmd+l",
        "command": "qcfg.fuzzySearch"
      },
      {
        "key": "ctrl+5",
        "mac": "cmd+5",
        "command": "qcfg.gotoLineRelative",
        "args": 5
      },
      {
        "key": "alt+5",
        "mac": "alt+5",
        "command": "qcfg.gotoLineRelative",
        "args": -5
      },
      {
        "key": "ctrl+6",
        "mac": "cmd+6",
        "command": "qcfg.gotoLineRelative",
        "args": 6
      },
      {
        "key": "alt+6",
        "mac": "alt+6",
        "command": "qcfg.gotoLineRelative",
        "args": -6
      },
      {
        "key": "ctrl+7",
        "mac": "cmd+7",
        "command": "qcfg.gotoLineRelative",
        "args": 7
      },
      {
        "key": "alt+7",
        "mac": "alt+7",
        "command": "qcfg.gotoLineRelative",
        "args": -7
      },
      {
        "key": "ctrl+8",
        "mac": "cmd+8",
        "command": "qcfg.gotoLineRelative",
        "args": 8
      },
      {
        "key": "alt+8",
        "mac": "alt+8",
        "command": "qcfg.gotoLineRelative",
        "args": -8
      },
      {
        "key": "ctrl+9",
        "mac": "cmd+9",
        "command": "qcfg.gotoLineRelative",
        "args": 9
      },
      {
        "key": "alt+9",
        "mac": "alt+9",
        "command": "qcfg.gotoLineRelative",
        "args": -9
      },
      {
        "key": "ctrl+1 ctrl+0",
        "mac": "cmd+1 cmd+0",
        "command": "qcfg.gotoLineRelative",
        "args": 10
      },
      {
        "key": "ctrl+1 0",
        "mac": "cmd+1 0",
        "command": "qcfg.gotoLineRelative",
        "args": 10
      },
      {
        "key": "alt+1 alt+0",
        "mac": "alt+1 alt+0",
        "command": "qcfg.gotoLineRelative",
        "args": -10
      },
      {
        "key": "alt+1 0",
        "mac": "alt+1 0",
        "command": "qcfg.gotoLineRelative",
        "args": -10
      },
      {
        "key": "ctrl+1 ctrl+1",
        "mac": "cmd+1 cmd+1",
        "command": "qcfg.gotoLineRelative",
        "args": 11
      },
      {
        "key": "ctrl+1 1",
        "mac": "cmd+1 1",
        "command": "qcfg.gotoLineRelative",
        "args": 11
      },
      {
        "key": "alt+1 alt+1",
        "mac": "alt+1 alt+1",
        "command": "qcfg.gotoLineRelative",
        "args": -11
      },
      {
        "key": "alt+1 1",
        "mac": "alt+1 1",
        "command": "qcfg.gotoLineRelative",
        "args": -11
      },
      {
        "key": "ctrl+1 ctrl+2",
        "mac": "cmd+1 cmd+2",
        "command": "qcfg.gotoLineRelative",
        "args": 12
      },
      {
        "key": "ctrl+1 2",
        "mac": "cmd+1 2",
        "command": "qcfg.gotoLineRelative",
        "args": 12
      },
      {
        "key": "alt+1 alt+2",
        "mac": "alt+1 alt+2",
        "command": "qcfg.gotoLineRelative",
        "args": -12
      },
      {
        "key": "alt+1 2",
        "mac": "alt+1 2",
        "command": "qcfg.gotoLineRelative",
        "args": -12
      },
      {
        "key": "ctrl+1 ctrl+3",
        "mac": "cmd+1 cmd+3",
        "command": "qcfg.gotoLineRelative",
        "args": 13
      },
      {
        "key": "ctrl+1 3",
        "mac": "cmd+1 3",
        "command": "qcfg.gotoLineRelative",
        "args": 13
      },
      {
        "key": "alt+1 alt+3",
        "mac": "alt+1 alt+3",
        "command": "qcfg.gotoLineRelative",
        "args": -13
      },
      {
        "key": "alt+1 3",
        "mac": "alt+1 3",
        "command": "qcfg.gotoLineRelative",
        "args": -13
      },
      {
        "key": "ctrl+1 ctrl+4",
        "mac": "cmd+1 cmd+4",
        "command": "qcfg.gotoLineRelative",
        "args": 14
      },
      {
        "key": "ctrl+1 4",
        "mac": "cmd+1 4",
        "command": "qcfg.gotoLineRelative",
        "args": 14
      },
      {
        "key": "alt+1 alt+4",
        "mac": "alt+1 alt+4",
        "command": "qcfg.gotoLineRelative",
        "args": -14
      },
      {
        "key": "alt+1 4",
        "mac": "alt+1 4",
        "command": "qcfg.gotoLineRelative",
        "args": -14
      },
      {
        "key": "ctrl+1 ctrl+5",
        "mac": "cmd+1 cmd+5",
        "command": "qcfg.gotoLineRelative",
        "args": 15
      },
      {
        "key": "ctrl+1 5",
        "mac": "cmd+1 5",
        "command": "qcfg.gotoLineRelative",
        "args": 15
      },
      {
        "key": "alt+1 alt+5",
        "mac": "alt+1 alt+5",
        "command": "qcfg.gotoLineRelative",
        "args": -15
      },
      {
        "key": "alt+1 5",
        "mac": "alt+1 5",
        "command": "qcfg.gotoLineRelative",
        "args": -15
      },
      {
        "key": "ctrl+1 ctrl+6",
        "mac": "cmd+1 cmd+6",
        "command": "qcfg.gotoLineRelative",
        "args": 16
      },
      {
        "key": "ctrl+1 6",
        "mac": "cmd+1 6",
        "command": "qcfg.gotoLineRelative",
        "args": 16
      },
      {
        "key": "alt+1 alt+6",
        "mac": "alt+1 alt+6",
        "command": "qcfg.gotoLineRelative",
        "args": -16
      },
      {
        "key": "alt+1 6",
        "mac": "alt+1 6",
        "command": "qcfg.gotoLineRelative",
        "args": -16
      },
      {
        "key": "ctrl+1 ctrl+7",
        "mac": "cmd+1 cmd+7",
        "command": "qcfg.gotoLineRelative",
        "args": 17
      },
      {
        "key": "ctrl+1 7",
        "mac": "cmd+1 7",
        "command": "qcfg.gotoLineRelative",
        "args": 17
      },
      {
        "key": "alt+1 alt+7",
        "mac": "alt+1 alt+7",
        "command": "qcfg.gotoLineRelative",
        "args": -17
      },
      {
        "key": "alt+1 7",
        "mac": "alt+1 7",
        "command": "qcfg.gotoLineRelative",
        "args": -17
      },
      {
        "key": "ctrl+1 ctrl+8",
        "mac": "cmd+1 cmd+8",
        "command": "qcfg.gotoLineRelative",
        "args": 18
      },
      {
        "key": "ctrl+1 8",
        "mac": "cmd+1 8",
        "command": "qcfg.gotoLineRelative",
        "args": 18
      },
      {
        "key": "alt+1 alt+8",
        "mac": "alt+1 alt+8",
        "command": "qcfg.gotoLineRelative",
        "args": -18
      },
      {
        "key": "alt+1 8",
        "mac": "alt+1 8",
        "command": "qcfg.gotoLineRelative",
        "args": -18
      },
      {
        "key": "ctrl+1 ctrl+9",
        "mac": "cmd+1 cmd+9",
        "command": "qcfg.gotoLineRelative",
        "args": 19
      },
      {
        "key": "ctrl+1 9",
        "mac": "cmd+1 9",
        "command": "qcfg.gotoLineRelative",
        "args": 19
      },
      {
        "key": "alt+1 alt+9",
        "mac": "alt+1 alt+9",
        "command": "qcfg.gotoLineRelative",
        "args": -19
      },
      {
        "key": "alt+1 9",
        "mac": "alt+1 9",
        "command": "qcfg.gotoLineRelative",
        "args": -19
      },
      {
        "key": "ctrl+2 ctrl+0",
        "mac": "cmd+2 cmd+0",
        "command": "qcfg.gotoLineRelative",
        "args": 20
      },
      {
        "key": "ctrl+2 0",
        "mac": "cmd+2 0",
        "command": "qcfg.gotoLineRelative",
        "args": 20
      },
      {
        "key": "alt+2 alt+0",
        "mac": "alt+2 alt+0",
        "command": "qcfg.gotoLineRelative",
        "args": -20
      },
      {
        "key": "alt+2 0",
        "mac": "alt+2 0",
        "command": "qcfg.gotoLineRelative",
        "args": -20
      },
      {
        "key": "ctrl+2 ctrl+1",
        "mac": "cmd+2 cmd+1",
        "command": "qcfg.gotoLineRelative",
        "args": 21
      },
      {
        "key": "ctrl+2 1",
        "mac": "cmd+2 1",
        "command": "qcfg.gotoLineRelative",
        "args": 21
      },
      {
        "key": "alt+2 alt+1",
        "mac": "alt+2 alt+1",
        "command": "qcfg.gotoLineRelative",
        "args": -21
      },
      {
        "key": "alt+2 1",
        "mac": "alt+2 1",
        "command": "qcfg.gotoLineRelative",
        "args": -21
      },
      {
        "key": "ctrl+2 ctrl+2",
        "mac": "cmd+2 cmd+2",
        "command": "qcfg.gotoLineRelative",
        "args": 22
      },
      {
        "key": "ctrl+2 2",
        "mac": "cmd+2 2",
        "command": "qcfg.gotoLineRelative",
        "args": 22
      },
      {
        "key": "alt+2 alt+2",
        "mac": "alt+2 alt+2",
        "command": "qcfg.gotoLineRelative",
        "args": -22
      },
      {
        "key": "alt+2 2",
        "mac": "alt+2 2",
        "command": "qcfg.gotoLineRelative",
        "args": -22
      },
      {
        "key": "ctrl+2 ctrl+3",
        "mac": "cmd+2 cmd+3",
        "command": "qcfg.gotoLineRelative",
        "args": 23
      },
      {
        "key": "ctrl+2 3",
        "mac": "cmd+2 3",
        "command": "qcfg.gotoLineRelative",
        "args": 23
      },
      {
        "key": "alt+2 alt+3",
        "mac": "alt+2 alt+3",
        "command": "qcfg.gotoLineRelative",
        "args": -23
      },
      {
        "key": "alt+2 3",
        "mac": "alt+2 3",
        "command": "qcfg.gotoLineRelative",
        "args": -23
      },
      {
        "key": "ctrl+2 ctrl+4",
        "mac": "cmd+2 cmd+4",
        "command": "qcfg.gotoLineRelative",
        "args": 24
      },
      {
        "key": "ctrl+2 4",
        "mac": "cmd+2 4",
        "command": "qcfg.gotoLineRelative",
        "args": 24
      },
      {
        "key": "alt+2 alt+4",
        "mac": "alt+2 alt+4",
        "command": "qcfg.gotoLineRelative",
        "args": -24
      },
      {
        "key": "alt+2 4",
        "mac": "alt+2 4",
        "command": "qcfg.gotoLineRelative",
        "args": -24
      },
      {
        "key": "ctrl+2 ctrl+5",
        "mac": "cmd+2 cmd+5",
        "command": "qcfg.gotoLineRelative",
        "args": 25
      },
      {
        "key": "ctrl+2 5",
        "mac": "cmd+2 5",
        "command": "qcfg.gotoLineRelative",
        "args": 25
      },
      {
        "key": "alt+2 alt+5",
        "mac": "alt+2 alt+5",
        "command": "qcfg.gotoLineRelative",
        "args": -25
      },
      {
        "key": "alt+2 5",
        "mac": "alt+2 5",
        "command": "qcfg.gotoLineRelative",
        "args": -25
      },
      {
        "key": "ctrl+2 ctrl+6",
        "mac": "cmd+2 cmd+6",
        "command": "qcfg.gotoLineRelative",
        "args": 26
      },
      {
        "key": "ctrl+2 6",
        "mac": "cmd+2 6",
        "command": "qcfg.gotoLineRelative",
        "args": 26
      },
      {
        "key": "alt+2 alt+6",
        "mac": "alt+2 alt+6",
        "command": "qcfg.gotoLineRelative",
        "args": -26
      },
      {
        "key": "alt+2 6",
        "mac": "alt+2 6",
        "command": "qcfg.gotoLineRelative",
        "args": -26
      },
      {
        "key": "ctrl+2 ctrl+7",
        "mac": "cmd+2 cmd+7",
        "command": "qcfg.gotoLineRelative",
        "args": 27
      },
      {
        "key": "ctrl+2 7",
        "mac": "cmd+2 7",
        "command": "qcfg.gotoLineRelative",
        "args": 27
      },
      {
        "key": "alt+2 alt+7",
        "mac": "alt+2 alt+7",
        "command": "qcfg.gotoLineRelative",
        "args": -27
      },
      {
        "key": "alt+2 7",
        "mac": "alt+2 7",
        "command": "qcfg.gotoLineRelative",
        "args": -27
      },
      {
        "key": "ctrl+2 ctrl+8",
        "mac": "cmd+2 cmd+8",
        "command": "qcfg.gotoLineRelative",
        "args": 28
      },
      {
        "key": "ctrl+2 8",
        "mac": "cmd+2 8",
        "command": "qcfg.gotoLineRelative",
        "args": 28
      },
      {
        "key": "alt+2 alt+8",
        "mac": "alt+2 alt+8",
        "command": "qcfg.gotoLineRelative",
        "args": -28
      },
      {
        "key": "alt+2 8",
        "mac": "alt+2 8",
        "command": "qcfg.gotoLineRelative",
        "args": -28
      },
      {
        "key": "ctrl+2 ctrl+9",
        "mac": "cmd+2 cmd+9",
        "command": "qcfg.gotoLineRelative",
        "args": 29
      },
      {
        "key": "ctrl+2 9",
        "mac": "cmd+2 9",
        "command": "qcfg.gotoLineRelative",
        "args": 29
      },
      {
        "key": "alt+2 alt+9",
        "mac": "alt+2 alt+9",
        "command": "qcfg.gotoLineRelative",
        "args": -29
      },
      {
        "key": "alt+2 9",
        "mac": "alt+2 9",
        "command": "qcfg.gotoLineRelative",
        "args": -29
      },
      {
        "key": "ctrl+3 ctrl+0",
        "mac": "cmd+3 cmd+0",
        "command": "qcfg.gotoLineRelative",
        "args": 30
      },
      {
        "key": "ctrl+3 0",
        "mac": "cmd+3 0",
        "command": "qcfg.gotoLineRelative",
        "args": 30
      },
      {
        "key": "alt+3 alt+0",
        "mac": "alt+3 alt+0",
        "command": "qcfg.gotoLineRelative",
        "args": -30
      },
      {
        "key": "alt+3 0",
        "mac": "alt+3 0",
        "command": "qcfg.gotoLineRelative",
        "args": -30
      },
      {
        "key": "ctrl+3 ctrl+1",
        "mac": "cmd+3 cmd+1",
        "command": "qcfg.gotoLineRelative",
        "args": 31
      },
      {
        "key": "ctrl+3 1",
        "mac": "cmd+3 1",
        "command": "qcfg.gotoLineRelative",
        "args": 31
      },
      {
        "key": "alt+3 alt+1",
        "mac": "alt+3 alt+1",
        "command": "qcfg.gotoLineRelative",
        "args": -31
      },
      {
        "key": "alt+3 1",
        "mac": "alt+3 1",
        "command": "qcfg.gotoLineRelative",
        "args": -31
      },
      {
        "key": "ctrl+3 ctrl+2",
        "mac": "cmd+3 cmd+2",
        "command": "qcfg.gotoLineRelative",
        "args": 32
      },
      {
        "key": "ctrl+3 2",
        "mac": "cmd+3 2",
        "command": "qcfg.gotoLineRelative",
        "args": 32
      },
      {
        "key": "alt+3 alt+2",
        "mac": "alt+3 alt+2",
        "command": "qcfg.gotoLineRelative",
        "args": -32
      },
      {
        "key": "alt+3 2",
        "mac": "alt+3 2",
        "command": "qcfg.gotoLineRelative",
        "args": -32
      },
      {
        "key": "ctrl+3 ctrl+3",
        "mac": "cmd+3 cmd+3",
        "command": "qcfg.gotoLineRelative",
        "args": 33
      },
      {
        "key": "ctrl+3 3",
        "mac": "cmd+3 3",
        "command": "qcfg.gotoLineRelative",
        "args": 33
      },
      {
        "key": "alt+3 alt+3",
        "mac": "alt+3 alt+3",
        "command": "qcfg.gotoLineRelative",
        "args": -33
      },
      {
        "key": "alt+3 3",
        "mac": "alt+3 3",
        "command": "qcfg.gotoLineRelative",
        "args": -33
      },
      {
        "key": "ctrl+3 ctrl+4",
        "mac": "cmd+3 cmd+4",
        "command": "qcfg.gotoLineRelative",
        "args": 34
      },
      {
        "key": "ctrl+3 4",
        "mac": "cmd+3 4",
        "command": "qcfg.gotoLineRelative",
        "args": 34
      },
      {
        "key": "alt+3 alt+4",
        "mac": "alt+3 alt+4",
        "command": "qcfg.gotoLineRelative",
        "args": -34
      },
      {
        "key": "alt+3 4",
        "mac": "alt+3 4",
        "command": "qcfg.gotoLineRelative",
        "args": -34
      },
      {
        "key": "ctrl+3 ctrl+5",
        "mac": "cmd+3 cmd+5",
        "command": "qcfg.gotoLineRelative",
        "args": 35
      },
      {
        "key": "ctrl+3 5",
        "mac": "cmd+3 5",
        "command": "qcfg.gotoLineRelative",
        "args": 35
      },
      {
        "key": "alt+3 alt+5",
        "mac": "alt+3 alt+5",
        "command": "qcfg.gotoLineRelative",
        "args": -35
      },
      {
        "key": "alt+3 5",
        "mac": "alt+3 5",
        "command": "qcfg.gotoLineRelative",
        "args": -35
      },
      {
        "key": "ctrl+3 ctrl+6",
        "mac": "cmd+3 cmd+6",
        "command": "qcfg.gotoLineRelative",
        "args": 36
      },
      {
        "key": "ctrl+3 6",
        "mac": "cmd+3 6",
        "command": "qcfg.gotoLineRelative",
        "args": 36
      },
      {
        "key": "alt+3 alt+6",
        "mac": "alt+3 alt+6",
        "command": "qcfg.gotoLineRelative",
        "args": -36
      },
      {
        "key": "alt+3 6",
        "mac": "alt+3 6",
        "command": "qcfg.gotoLineRelative",
        "args": -36
      },
      {
        "key": "ctrl+3 ctrl+7",
        "mac": "cmd+3 cmd+7",
        "command": "qcfg.gotoLineRelative",
        "args": 37
      },
      {
        "key": "ctrl+3 7",
        "mac": "cmd+3 7",
        "command": "qcfg.gotoLineRelative",
        "args": 37
      },
      {
        "key": "alt+3 alt+7",
        "mac": "alt+3 alt+7",
        "command": "qcfg.gotoLineRelative",
        "args": -37
      },
      {
        "key": "alt+3 7",
        "mac": "alt+3 7",
        "command": "qcfg.gotoLineRelative",
        "args": -37
      },
      {
        "key": "ctrl+3 ctrl+8",
        "mac": "cmd+3 cmd+8",
        "command": "qcfg.gotoLineRelative",
        "args": 38
      },
      {
        "key": "ctrl+3 8",
        "mac": "cmd+3 8",
        "command": "qcfg.gotoLineRelative",
        "args": 38
      },
      {
        "key": "alt+3 alt+8",
        "mac": "alt+3 alt+8",
        "command": "qcfg.gotoLineRelative",
        "args": -38
      },
      {
        "key": "alt+3 8",
        "mac": "alt+3 8",
        "command": "qcfg.gotoLineRelative",
        "args": -38
      },
      {
        "key": "ctrl+3 ctrl+9",
        "mac": "cmd+3 cmd+9",
        "command": "qcfg.gotoLineRelative",
        "args": 39
      },
      {
        "key": "ctrl+3 9",
        "mac": "cmd+3 9",
        "command": "qcfg.gotoLineRelative",
        "args": 39
      },
      {
        "key": "alt+3 alt+9",
        "mac": "alt+3 alt+9",
        "command": "qcfg.gotoLineRelative",
        "args": -39
      },
      {
        "key": "alt+3 9",
        "mac": "alt+3 9",
        "command": "qcfg.gotoLineRelative",
        "args": -39
      },
      {
        "key": "ctrl+4 ctrl+0",
        "mac": "cmd+4 cmd+0",
        "command": "qcfg.gotoLineRelative",
        "args": 40
      },
      {
        "key": "ctrl+4 0",
        "mac": "cmd+4 0",
        "command": "qcfg.gotoLineRelative",
        "args": 40
      },
      {
        "key": "alt+4 alt+0",
        "mac": "alt+4 alt+0",
        "command": "qcfg.gotoLineRelative",
        "args": -40
      },
      {
        "key": "alt+4 0",
        "mac": "alt+4 0",
        "command": "qcfg.gotoLineRelative",
        "args": -40
      },
      {
        "key": "ctrl+4 ctrl+1",
        "mac": "cmd+4 cmd+1",
        "command": "qcfg.gotoLineRelative",
        "args": 41
      },
      {
        "key": "ctrl+4 1",
        "mac": "cmd+4 1",
        "command": "qcfg.gotoLineRelative",
        "args": 41
      },
      {
        "key": "alt+4 alt+1",
        "mac": "alt+4 alt+1",
        "command": "qcfg.gotoLineRelative",
        "args": -41
      },
      {
        "key": "alt+4 1",
        "mac": "alt+4 1",
        "command": "qcfg.gotoLineRelative",
        "args": -41
      },
      {
        "key": "ctrl+4 ctrl+2",
        "mac": "cmd+4 cmd+2",
        "command": "qcfg.gotoLineRelative",
        "args": 42
      },
      {
        "key": "ctrl+4 2",
        "mac": "cmd+4 2",
        "command": "qcfg.gotoLineRelative",
        "args": 42
      },
      {
        "key": "alt+4 alt+2",
        "mac": "alt+4 alt+2",
        "command": "qcfg.gotoLineRelative",
        "args": -42
      },
      {
        "key": "alt+4 2",
        "mac": "alt+4 2",
        "command": "qcfg.gotoLineRelative",
        "args": -42
      },
      {
        "key": "ctrl+4 ctrl+3",
        "mac": "cmd+4 cmd+3",
        "command": "qcfg.gotoLineRelative",
        "args": 43
      },
      {
        "key": "ctrl+4 3",
        "mac": "cmd+4 3",
        "command": "qcfg.gotoLineRelative",
        "args": 43
      },
      {
        "key": "alt+4 alt+3",
        "mac": "alt+4 alt+3",
        "command": "qcfg.gotoLineRelative",
        "args": -43
      },
      {
        "key": "alt+4 3",
        "mac": "alt+4 3",
        "command": "qcfg.gotoLineRelative",
        "args": -43
      },
      {
        "key": "ctrl+4 ctrl+4",
        "mac": "cmd+4 cmd+4",
        "command": "qcfg.gotoLineRelative",
        "args": 44
      },
      {
        "key": "ctrl+4 4",
        "mac": "cmd+4 4",
        "command": "qcfg.gotoLineRelative",
        "args": 44
      },
      {
        "key": "alt+4 alt+4",
        "mac": "alt+4 alt+4",
        "command": "qcfg.gotoLineRelative",
        "args": -44
      },
      {
        "key": "alt+4 4",
        "mac": "alt+4 4",
        "command": "qcfg.gotoLineRelative",
        "args": -44
      },
      {
        "key": "ctrl+4 ctrl+5",
        "mac": "cmd+4 cmd+5",
        "command": "qcfg.gotoLineRelative",
        "args": 45
      },
      {
        "key": "ctrl+4 5",
        "mac": "cmd+4 5",
        "command": "qcfg.gotoLineRelative",
        "args": 45
      },
      {
        "key": "alt+4 alt+5",
        "mac": "alt+4 alt+5",
        "command": "qcfg.gotoLineRelative",
        "args": -45
      },
      {
        "key": "alt+4 5",
        "mac": "alt+4 5",
        "command": "qcfg.gotoLineRelative",
        "args": -45
      },
      {
        "key": "ctrl+4 ctrl+6",
        "mac": "cmd+4 cmd+6",
        "command": "qcfg.gotoLineRelative",
        "args": 46
      },
      {
        "key": "ctrl+4 6",
        "mac": "cmd+4 6",
        "command": "qcfg.gotoLineRelative",
        "args": 46
      },
      {
        "key": "alt+4 alt+6",
        "mac": "alt+4 alt+6",
        "command": "qcfg.gotoLineRelative",
        "args": -46
      },
      {
        "key": "alt+4 6",
        "mac": "alt+4 6",
        "command": "qcfg.gotoLineRelative",
        "args": -46
      },
      {
        "key": "ctrl+4 ctrl+7",
        "mac": "cmd+4 cmd+7",
        "command": "qcfg.gotoLineRelative",
        "args": 47
      },
      {
        "key": "ctrl+4 7",
        "mac": "cmd+4 7",
        "command": "qcfg.gotoLineRelative",
        "args": 47
      },
      {
        "key": "alt+4 alt+7",
        "mac": "alt+4 alt+7",
        "command": "qcfg.gotoLineRelative",
        "args": -47
      },
      {
        "key": "alt+4 7",
        "mac": "alt+4 7",
        "command": "qcfg.gotoLineRelative",
        "args": -47
      },
      {
        "key": "ctrl+4 ctrl+8",
        "mac": "cmd+4 cmd+8",
        "command": "qcfg.gotoLineRelative",
        "args": 48
      },
      {
        "key": "ctrl+4 8",
        "mac": "cmd+4 8",
        "command": "qcfg.gotoLineRelative",
        "args": 48
      },
      {
        "key": "alt+4 alt+8",
        "mac": "alt+4 alt+8",
        "command": "qcfg.gotoLineRelative",
        "args": -48
      },
      {
        "key": "alt+4 8",
        "mac": "alt+4 8",
        "command": "qcfg.gotoLineRelative",
        "args": -48
      },
      {
        "key": "ctrl+4 ctrl+9",
        "mac": "cmd+4 cmd+9",
        "command": "qcfg.gotoLineRelative",
        "args": 49
      },
      {
        "key": "ctrl+4 9",
        "mac": "cmd+4 9",
        "command": "qcfg.gotoLineRelative",
        "args": 49
      },
      {
        "key": "alt+4 alt+9",
        "mac": "alt+4 alt+9",
        "command": "qcfg.gotoLineRelative",
        "args": -49
      },
      {
        "key": "alt+4 9",
        "mac": "alt+4 9",
        "command": "qcfg.gotoLineRelative",
        "args": -49
      },
      {
        "key": "ctrl+u",
        "mac": "cmd+u",
        "command": "qcfg.gtags.workspace"
      },
      {
        "key": "ctrl+o",
        "mac": "cmd+o",
        "command": "qcfg.history.backward"
      },
      {
        "key": "ctrl+i",
        "mac": "cmd+i",
        "command": "qcfg.history.forward"
      },
      {
        "command": "qcfg.historyWrap.gotoSymbol",
        "key": "ctrl+t",
        "mac": "cmd+t"
      },
      {
        "command": "qcfg.historyWrap.openPreviousEditorFromHistory",
        "key": "ctrl+e",
        "mac": "cmd+e",
        "when": "editorTextFocus && !inQuickOpen"
      },
      {
        "command": "qcfg.historyWrap.quickOpen",
        "key": "ctrl+enter",
        "mac": "cmd+enter",
        "when": "!referenceSearchTreeFocused"
      },
      {
        "command": "qcfg.historyWrap.showAllSymbols",
        "key": "ctrl+shift+t",
        "mac": "cmd+shift+t"
      },
      {
        "command": "qcfg.jump2line",
        "key": "ctrl+k ctrl+l",
        "mac": "cmd+k cmd+l"
      },
      {
        "key": "down",
        "command": "qcfg.multipleSelection.moveMarkDown",
        "when": "editorTextFocus && editorHasMultipleSelections && !suggestWidgetVisible"
      },
      {
        "key": "up",
        "command": "qcfg.multipleSelection.moveMarkUp",
        "when": "editorTextFocus && editorHasMultipleSelections && !suggestWidgetVisible"
      },
      {
        "key": "escape",
        "command": "qcfg.multipleSelection.resetToMark",
        "when": "editorTextFocus && editorHasMultipleSelections && !suggestWidgetVisible && qcfgMultipleSelectionsMarker"
      },
      {
        "key": "tab",
        "command": "qcfg.multipleSelection.unselectMarked",
        "when": "editorTextFocus && editorHasMultipleSelections && !suggestWidgetVisible"
      },
      {
        "key": "ctrl+k shift+ctrl+o",
        "mac": "cmd+k shift+cmd+o",
        "command": "qcfg.openRecent.newWindow"
      },
      {
        "key": "ctrl+k ctrl+o",
        "mac": "cmd+k cmd+o",
        "command": "qcfg.openRecent.sameWindow"
      },
      {
        "key": "enter",
        "command": "qcfg.peek.openReference",
        "when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
      },
      {
        "key": "cmd+enter",
        "command": "qcfg.peek.openReferenceToSide",
        "when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
      },
      {
        "command": "qcfg.peekFlatOutline",
        "key": "cmd+,"
      },
      {
        "key": "alt+shift+g",
        "command": "qcfg.quickPickLastLocations",
        "when": "editorTextFocus"
      },
      {
        "key": "cmd+f2",
        "command": "qcfg.renameReferences",
        "when": "editorTextFocus"
      },
      {
        "key": "cmd+shift+f2",
        "command": "qcfg.renameReferences.withConfirmation",
        "when": "editorTextFocus"
      },
      {
        "key": "cmd+g",
        "command": "qcfg.rerunLastSearch",
        "when": "editorTextFocus"
      },
      {
        "key": "cmd+shift+g",
        "command": "qcfg.rerunPreviousSearch",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+shift+;",
        "mac": "cmd+shift+;",
        "command": "qcfg.runCommand"
      },
      {
        "key": "alt+d",
        "command": "qcfg.search.GtagsCtagsDefinition"
      },
      {
        "mac": "cmd+d",
        "command": "qcfg.search.definitions",
        "when": "editorHasDefinitionProvider && editorTextFocus"
      },
      {
        "mac": "cmd+r",
        "command": "qcfg.search.references",
        "when": "editorHasReferenceProvider && editorTextFocus"
      },
      {
        "key": "alt+r",
        "command": "qcfg.search.selectedText",
        "when": "editorTextFocus && editorHasSelection"
      },
      {
        "key": "alt+shift+r",
        "command": "qcfg.search.selectedText.allFolders",
        "when": "editorTextFocus && editorHasSelection"
      },
      {
        "key": "alt+shift+r",
        "command": "qcfg.search.word",
        "when": "editorTextFocus && !editorHasSelection"
      },
      {
        "key": "alt+r",
        "command": "qcfg.search.word.allFolders",
        "when": "editorTextFocus && !editorHasSelection"
      },
      {
        "key": "ctrl+b",
        "mac": "cmd+b",
        "command": "qcfg.selectLines",
        "when": "editorTextFocus"
      },
      {
        "key": "alt+f2",
        "command": "qcfg.selectReferences",
        "when": "editorTextFocus"
      },
      {
        "key": "alt+g",
        "command": "qcfg.showLastLocationsInPanel",
        "when": "editorTextFocus"
      },
      {
        "key": "cmd+alt+shift+j",
        "command": "qcfg.shrinkSelectionFaster",
        "when": "editorTextFocus"
      },
      {
        "key": "cmd+c",
        "command": "qcfg.smartCopy",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+v",
        "mac": "cmd+v",
        "command": "qcfg.smartPaste",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+backspace",
        "mac": "cmd+backspace",
        "command": "qcfg.stripBrackets",
        "when": "editorTextFocus && editorHasSelection"
      },
      {
        "key": "shift+9",
        "command": "qcfg.surroundWith",
        "when": "editorTextFocus && editorHasSelection",
        "args": [
          "(",
          ")",
          "left"
        ]
      },
      {
        "key": "shift+0",
        "command": "qcfg.surroundWith",
        "when": "editorTextFocus && editorHasSelection",
        "args": [
          "(",
          ")",
          "right"
        ]
      },
      {
        "key": "[",
        "command": "qcfg.surroundWith",
        "when": "editorTextFocus && editorHasSelection",
        "args": [
          "[",
          "]",
          "left"
        ]
      },
      {
        "key": "]",
        "command": "qcfg.surroundWith",
        "when": "editorTextFocus && editorHasSelection",
        "args": [
          "[",
          "]",
          "right"
        ]
      },
      {
        "key": "alt+enter",
        "command": "qcfg.swapCursorAndAnchor",
        "when": "editorHasSelection && editorTextFocus && !qcfgTreeMode"
      },
      {
        "key": "cmd+shift+v",
        "command": "qcfg.swapWithMark",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "qcfg.syg",
        "key": "alt+s",
        "mac": "alt+s"
      },
      {
        "key": "cmd+k cmd+shift+left",
        "command": "qcfg.syncEditorToDirection",
        "args": [
          "left"
        ]
      },
      {
        "key": "cmd+k cmd+shift+right",
        "command": "qcfg.syncEditorToDirection",
        "args": [
          "right"
        ]
      },
      {
        "key": "cmd+k cmd+shift+down",
        "command": "qcfg.syncEditorToDirection",
        "args": [
          "down"
        ]
      },
      {
        "key": "cmd+k cmd+shift+up",
        "command": "qcfg.syncEditorToDirection",
        "args": [
          "up"
        ]
      },
      {
        "key": "shift+ctrl+space",
        "mac": "shift+cmd+space",
        "command": "qcfg.syncToEditorBeside"
      },
      {
        "command": "qcfg.tasks.build.default",
        "key": "ctrl+k ctrl+shift+b",
        "mac": "cmd+k cmd+shift+b"
      },
      {
        "command": "qcfg.tasks.build.last",
        "key": "ctrl+k ctrl+b",
        "mac": "cmd+k cmd+b"
      },
      {
        "command": "qcfg.tasks.show",
        "key": "alt+t",
        "mac": "alt+t"
      },
      {
        "key": "cmd+k cmd+j",
        "command": "qcfg.treeMode.enter",
        "when": "editorTextFocus && !qcfgTreeMode"
      },
      {
        "key": "escape",
        "command": "qcfg.treeMode.exit",
        "when": "editorTextFocus && qcfgTreeMode"
      },
      {
        "key": "shift+left",
        "command": "qcfg.treeMode.extendSelection",
        "when": "editorTextFocus && qcfgTreeMode",
        "args": "left"
      },
      {
        "key": "shift+right",
        "command": "qcfg.treeMode.extendSelection",
        "when": "editorTextFocus && qcfgTreeMode",
        "args": "right"
      },
      {
        "key": "shift+cmd+left",
        "command": "qcfg.treeMode.extendSelection",
        "when": "editorTextFocus && qcfgTreeMode",
        "args": "first"
      },
      {
        "key": "shift+cmd+right",
        "command": "qcfg.treeMode.extendSelection",
        "when": "editorTextFocus && qcfgTreeMode",
        "args": "last"
      },
      {
        "key": "cmd+alt+left",
        "command": "qcfg.treeMode.moveSelection",
        "when": "editorTextFocus && qcfgTreeMode",
        "args": "left"
      },
      {
        "key": "cmd+alt+right",
        "command": "qcfg.treeMode.moveSelection",
        "when": "editorTextFocus && qcfgTreeMode",
        "args": "right"
      },
      {
        "key": "alt+enter",
        "command": "qcfg.treeMode.reverseSelection",
        "when": "editorTextFocus && qcfgTreeMode"
      },
      {
        "key": "up",
        "command": "qcfg.treeMode.selectParent",
        "when": "editorTextFocus && qcfgTreeMode"
      },
      {
        "key": "cmd+up",
        "command": "qcfg.treeMode.selectParentListItem",
        "when": "editorTextFocus && qcfgTreeMode"
      },
      {
        "key": "left",
        "command": "qcfg.treeMode.selectSibling",
        "when": "editorTextFocus && qcfgTreeMode",
        "args": "left"
      },
      {
        "key": "right",
        "command": "qcfg.treeMode.selectSibling",
        "when": "editorTextFocus && qcfgTreeMode",
        "args": "right"
      },
      {
        "key": "cmd+left",
        "command": "qcfg.treeMode.selectSibling",
        "when": "editorTextFocus && qcfgTreeMode",
        "args": "first"
      },
      {
        "key": "cmd+right",
        "command": "qcfg.treeMode.selectSibling",
        "when": "editorTextFocus && qcfgTreeMode",
        "args": "last"
      },
      {
        "key": "down",
        "command": "qcfg.treeMode.shrink",
        "when": "editorTextFocus && qcfgTreeMode"
      },
      {
        "key": "shift+cmd+w",
        "command": "workbench.action.closeAllEditors"
      },
      {
        "key": "cmd+w",
        "command": "workbench.action.closeEditorInAllGroups"
      },
      {
        "key": "ctrl+shift+o",
        "mac": "cmd+shift+o",
        "command": "workbench.action.navigateBack"
      },
      {
        "key": "ctrl+shift+i",
        "mac": "cmd+shift+i",
        "command": "workbench.action.navigateForward"
      },
      {
        "key": "cmd+a",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && isMac",
        "args": {
          "text": "\u0001"
        }
      },
      {
        "key": "cmd+e",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && isMac",
        "args": {
          "text": "\u0005"
        }
      },
      {
        "key": "cmd+c",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && isMac",
        "args": {
          "text": "\u0003"
        }
      },
      {
        "key": "cmd+w",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && isMac",
        "args": {
          "text": "\u0017"
        }
      },
      {
        "key": "cmd+r",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && isMac",
        "args": {
          "text": "\u0012"
        }
      },
      {
        "key": "cmd+n",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && isMac",
        "args": {
          "text": "\u000e"
        }
      },
      {
        "key": "cmd+p",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && isMac",
        "args": {
          "text": "\u0010"
        }
      },
      {
        "key": "cmd+u",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && isMac",
        "args": {
          "text": "\u0015"
        }
      },
      {
        "key": "cmd+shift+k",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && isMac",
        "args": {
          "text": "\u000b"
        }
      },
      {
        "key": "alt+b",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && isMac",
        "args": {
          "text": "\u001bb"
        }
      },
      {
        "key": "alt+f",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && isMac",
        "args": {
          "text": "\u001bf"
        }
      },
      {
        "mac": "alt+e",
        "command": "workbench.action.toggleAuxiliaryBar"
      },
      {
        "mac": "alt+w",
        "command": "workbench.action.togglePanel"
      },
      {
        "mac": "alt+q",
        "command": "workbench.action.toggleSidebarVisibility"
      }
    ],
    "configuration": {
      "title": "Qcfg configuration",
      "properties": {
        "qcfg.autoResize.steps": {
          "type": "number",
          "description": "Number of steps by which to auto-resize active editor",
          "default": 1
        },
        "qcfg.autoResize.enabled": {
          "type": "boolean",
          "description": "Whether auto-resize enabled",
          "default": false
        },
        "qcfg.alternate.mapping": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": "Mapping for alternate (header/source) switch.\n\nFor each extension specify list of alternative extension.",
          "default": {}
        },
        "qcfg.autoSync.enabled": {
          "type": "boolean",
          "description": "AutoSync enabled on start",
          "default": false
        },
        "qcfg.autoSync.command": {
          "type": "string",
          "description": "AutoSync command"
        },
        "qcfg.autoMarkdownPreview": {
          "type": "boolean",
          "description": "Open preview automatically when opening markdown documents"
        },
        "qcfg.newNote.folder": {
          "type": "string",
          "description": "Workspace folder name for creating new notes"
        },
        "qcfg.newNote.path": {
          "type": "string",
          "description": "Path of notes directory relative to workspace folder root"
        },
        "qcfg.git.web": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "remotes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of remote patterns"
              },
              "links": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Description of Web link"
                    },
                    "url": {
                      "type": "string",
                      "description": "Web url"
                    }
                  },
                  "required": [
                    "title",
                    "url"
                  ],
                  "additionalProperties": false
                },
                "description": "Description of Web link"
              }
            },
            "required": [
              "remotes",
              "links"
            ],
            "additionalProperties": false
          },
          "description": "List of rules to open current line in Git Web UI",
          "default": []
        },
        "qcfg.remote.setDefault": {
          "type": "boolean",
          "description": "Per-workspace/folder setting to set it as default remote server",
          "default": false
        },
        "qcfg.gtags.workspaceSymbols": {
          "type": "boolean",
          "description": "Use gtags as workspace symbols provider",
          "default": false
        },
        "qcfg.gtags.hover": {
          "type": "boolean",
          "description": "Use gtags hover symbol provider",
          "default": false
        },
        "qcfg.notification.timeoutMs": {
          "type": "number",
          "description": "Default timeout (in milliseconds) for notifications",
          "default": 3000
        },
        "qcfg.configDir.global": {
          "type": "string",
          "description": "Global configuration directory for vscode-qcfg specific features (defaults to HOME directory)",
          "default": "~"
        },
        "qcfg.configDir.workspace": {
          "type": "string",
          "description": "Workspace configuration direcotry for vsdode-qcfg specific features, relative to workspace file's directory or the only folder by default",
          "default": "."
        },
        "qcfg.fileDiagnostics.show": {
          "type": "boolean",
          "description": "Whether do show per-file diagnostic counts in statusbar",
          "default": true
        },
        "qcfg.fileDiagnostics.excludeMessage": {
          "type": "string",
          "description": "Exclude diagnostics whose message matches this pattern"
        },
        "qcfg.fileDiagnostics.excludeSource": {
          "type": "string",
          "description": "Exclude diagnostics whose source matches this pattern"
        },
        "qcfg.fileDiagnostics.excludeCodes": {
          "type": "array",
          "items": {
            "type": [
              "number",
              "string"
            ]
          },
          "description": "Exclude diagnostics whose code matches any of these"
        },
        "qcfg.langClient.remote": {
          "type": "boolean",
          "description": "C/C++ language clients are remote (over SSH)",
          "default": false
        },
        "qcfg.clangd.typeHierarchy": {
          "type": "boolean",
          "description": "Add clangd provider for type hierarchy",
          "default": true
        },
        "qcfg.ccls.typeHierarchy": {
          "type": "boolean",
          "description": "Add ccls provider for type hierarchy",
          "default": true
        },
        "qcfg.ccls.callHierarchy": {
          "type": "boolean",
          "description": "Add ccls provider for call hierarchy",
          "default": true
        },
        "qcfg.configRules": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "quickFixCodeActions": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "minItems": 2,
                      "items": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ],
                      "maxItems": 2
                    }
                  ]
                },
                "description": "TODO: add docs"
              },
              "glob": {
                "type": "string",
                "description": "Glob pattern to match against file name."
              },
              "language": {
                "type": "string",
                "description": "Language ID of file"
              }
            }
          },
          "description": "Array of configuration rules per file type, name etc.",
          "default": []
        },
        "qcfg.tasks": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "const": "terminal"
                  },
                  "when": {
                    "type": "object",
                    "properties": {
                      "fileExists": {
                        "type": "string",
                        "description": "File exists of given glob pattern"
                      },
                      "fileMatches": {
                        "type": "string",
                        "description": "Current file matches glob pattern"
                      }
                    },
                    "additionalProperties": false
                  },
                  "flags": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "build",
                        "folder",
                        "hidden",
                        "clear",
                        "dedicatedPanel",
                        "reindex",
                        "autoRestart",
                        "notifyOnFailure"
                      ]
                    }
                  },
                  "folders": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Workspace folders in which this task is valid",
                    "default": []
                  },
                  "command": {
                    "type": "string"
                  },
                  "cwd": {
                    "type": "string"
                  },
                  "exitCodes": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "Expected process exit codes",
                    "default": []
                  },
                  "reveal": {
                    "type": "string",
                    "enum": [
                      "focus",
                      "yes",
                      "no"
                    ],
                    "description": "Reveal terminal when running",
                    "default": "yes"
                  },
                  "onSuccess": {
                    "type": "string",
                    "enum": [
                      "none",
                      "auto",
                      "hide",
                      "dispose",
                      "show",
                      "notify"
                    ],
                    "default": "auto"
                  },
                  "onFailure": {
                    "type": "string",
                    "enum": [
                      "none",
                      "auto",
                      "hide",
                      "dispose",
                      "show",
                      "notify"
                    ],
                    "default": "auto"
                  },
                  "problemMatchers": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "string",
                        "enum": [
                          "gcc-relative",
                          "gcc-absolute"
                        ]
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    ],
                    "default": []
                  }
                },
                "required": [
                  "command",
                  "type"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "const": "process"
                  },
                  "when": {
                    "type": "object",
                    "properties": {
                      "fileExists": {
                        "type": "string",
                        "description": "File exists of given glob pattern"
                      },
                      "fileMatches": {
                        "type": "string",
                        "description": "Current file matches glob pattern"
                      }
                    },
                    "additionalProperties": false
                  },
                  "flags": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "build",
                        "folder",
                        "hidden"
                      ]
                    }
                  },
                  "folders": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Workspace folders in which this task is valid",
                    "default": []
                  },
                  "command": {
                    "type": "string"
                  },
                  "cwd": {
                    "type": "string"
                  },
                  "exitCodes": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "Expected process exit codes",
                    "default": []
                  },
                  "parseOutput": {
                    "type": "object",
                    "properties": {
                      "format": {
                        "type": "string",
                        "enum": [
                          "vimgrep",
                          "gtags"
                        ]
                      },
                      "tag": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "format"
                    ],
                    "additionalProperties": false,
                    "description": "Extract locations from output using predefined format or custom regular expression"
                  }
                },
                "required": [
                  "command",
                  "type"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "const": "search"
                  },
                  "when": {
                    "type": "object",
                    "properties": {
                      "fileExists": {
                        "type": "string",
                        "description": "File exists of given glob pattern"
                      },
                      "fileMatches": {
                        "type": "string",
                        "description": "Current file matches glob pattern"
                      }
                    },
                    "additionalProperties": false
                  },
                  "flags": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "hidden",
                        "regex",
                        "word",
                        "case"
                      ]
                    }
                  },
                  "folders": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Workspace folders in which this task is valid",
                    "default": []
                  },
                  "query": {
                    "type": "string"
                  },
                  "searchTitle": {
                    "type": "string"
                  }
                },
                "required": [
                  "query",
                  "type"
                ],
                "additionalProperties": false
              },
              {
                "type": "string"
              }
            ]
          },
          "description": "Dictionary of tasks",
          "default": {}
        },
        "qcfg.todo.keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of TODO keywords",
          "default": []
        }
      }
    }
  }
}
