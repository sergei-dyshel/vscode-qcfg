{
  "name": "vscode-qcfg",
  "displayName": "vscode-qcfg",
  "description": "My personal extension",
  "version": "0.0.2",
  "publisher": "QyRoN",
  "repository": {
    "type": "git",
    "url": "https://github.com/sergei-dyshel/qyron-config.git"
  },
  "engines": {
    "vscode": "^1.31.0"
  },
  "enableProposedApi": true,
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./dist/extension",
  "contributes": {
    "commands": [
      {
        "command": "qcfg.toggleReadOnly",
        "title": "qcfg: Toggle workspace READ-ONLY"
      },
      {
        "command": "qcfg.terminal.inWorkspaceFolder",
        "title": "qcfg: Open terminal in current workspace folder"
      },
      {
        "command": "qcfg.runCommand",
        "title": "qcfg: Run command"
      },
      {
        "command": "qcfg.terminal.inFileFolder",
        "title": "qcfg: Open terminal in current file's folder"
      },
      {
        "command": "qcfg.gtags.workspace",
        "title": "qcfg: Show gtags for entire workspace"
      },
      {
        "command": "qcfg.gtags.definition",
        "title": "qcfg: Open gtags definition"
      },
      {
        "command": "qcfg.search.word.peek",
        "title": "qcfg: Search current word in workspace (peek)"
      },
      {
        "command": "qcfg.search.word.panel",
        "title": "qcfg: Search current word in workspace (panel)"
      },
      {
        "command": "qcfg.search.todos",
        "title": "qcfg: search ToDos (TODO:)"
      },
      {
        "command": "qcfg.search.structField",
        "title": "qcfg: Search current struct field in workspace"
      },
      {
        "command": "qcfg.colors.select",
        "title": "qcfg: Select workspace color theme"
      },
      {
        "command": "qcfg.colors.persist",
        "title": "qcfg: Persist workspace color theme"
      },
      {
        "command": "qcfg.colors.clear",
        "title": "qcfg: Clear workspace color theme"
      },
      {
        "command": "qcfg.log.debug",
        "title": "qcfg: Set log level to DEBUG"
      },
      {
        "command": "qcfg.log.info",
        "title": "qcfg: Set log level to INFO"
      },
      {
        "command": "qcfg.log.trace",
        "title": "qcfg: Set log level to TRACE"
      },
      {
        "command": "qcfg.history.backward",
        "title": "qcfg: Go backward in history"
      },
      {
        "command": "qcfg.history.forward",
        "title": "qcfg: Go forward in history"
      },
      {
        "command": "qcfg.fuzzySearch",
        "title": "qcfg: Fuzzy search lines"
      }
    ],
    "keybindings": [
        {
                "key": "ctrl+shift+;",
                "command": "qcfg.runCommand"
        },
        {
                "key": "ctrl+u",
                "command": "qcfg.gtags.workspace"
        },
        {
                "key": "alt+d",
                "command": "qcfg.gtags.definition"
        },
        {
                "key": "alt+r",
                "command": "qcfg.search.word",
                "when": "editorFocus && !findWidgetVisible"
        },
        {
                "key": "alt+shift+r",
                "command": "qcfg.search.structField"
        },
        {
                "key": "ctrl+o",
                "command": "workbench.action.navigateBack"
        },
        {
                "key": "ctrl+shift+o",
                "command": "qcfg.history.backward"
        },
        {
                "key": "ctrl+i",
                "command": "workbench.action.navigateForward"
        },
        {
                "key": "ctrl+shift+i",
                "command": "qcfg.history.forward"
        },
        {
                "key": "ctrl+shift+-",
                "command": "-workbench.action.navigateForward"
        },
        {
                "key": "ctrl+alt+-",
                "command": "-workbench.action.navigateBack"
        },
        {
                "key": "ctrl+l",
                "command": "qcfg.fuzzySearch"
        }
    ],
    "configuration": {
      "title": "Qcfg configuration",
      "properties": {
        "qcfg.log.level": {
          "type": "string",
          "description": "Log level",
          "enum": [
            "debug",
            "info",
            "warning"
          ]
        }
      }
    },
    "problemMatchers": [
      {
        "name": "e8build",
        "owner": "qcfg",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "severity": "warning",
        "pattern": {
          "regexp": "^(.*?):(\\d+):((\\d+):)?\\s+(fatal error|warning|error|note):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 4,
          "message": 6
        }
      },
      {
        "name": "gcc-relative",
        "owner": "qcfg",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      },
      {
        "name": "gcc-absolute",
        "owner": "qcfg",
        "fileLocation": "absolute",
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "make package.json && webpack --mode production",
    "tsc-compile": "tsc -p .",
    "compile": "make package.json && webpack --mode none",
    "tsc-watch": "tsc -watch -p ./",
    "watch": "webpack --mode none --watch",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "npm run compile && node ./node_modules/vscode/bin/test",
    "check": "gts check",
    "clean": "gts clean",
    "fix": "gts fix",
    "prepare": "npm run compile",
    "pretest": "npm run compile",
    "posttest": "npm run check"
  },
  "dependencies": {
    "clipboardy": "^1.2.3",
    "glob": "^7.1.4",
    "minimatch": "^3.0.4",
    "node-loader": "^0.6.0",
    "re2": "^1.8.4",
    "shlex": "^1.0.3",
    "superstring": "^2.3.4",
    "tree-sitter": "^0.13.23",
    "tree-sitter-cpp": "^0.13.11",
    "tree-sitter-python": "^0.13.6",
    "tree-sitter-typescript": "^0.13.6",
    "typescript-collections": "^1.1.4"
  },
  "devDependencies": {
    "@types/clipboardy": "^1.1.0",
    "@types/glob": "^7.1.1",
    "@types/minimatch": "^3.0.3",
    "@types/mocha": "^2.2.42",
    "@types/node": "^8.10.39",
    "deepmerge": "^3.1.0",
    "gts": "^0.9.0",
    "json-merger": "^1.0.2",
    "ts-loader": "^6.0.1",
    "ts-node": "^7.0.1",
    "tslint": "^5.12.1",
    "typescript": "^3.2.2",
    "vscode": "^1.1.26",
    "vscode-languageclient": "^5.2.1",
    "vscode-languageserver": "^5.2.1",
    "webpack": "^4.32.2",
    "webpack-cli": "^3.3.2"
  }
}
