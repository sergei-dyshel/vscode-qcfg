{
  "name": "vscode-qcfg",
  "displayName": "vscode-qcfg",
  "description": "My personal extension",
  "version": "0.0.2",
  "publisher": "QyRoN",
  "repository": {
    "type": "git",
    "url": "https://github.com/sergei-dyshel/qyron-config.git"
  },
  "engines": {
    "vscode": "^1.51.0"
  },
  "enableProposedApi": true,
  "categories": ["Other"],
  "activationEvents": ["*"],
  "main": "./dist/extension",
  "contributes": {
    "jsonValidation": [
      {
        "fileMatch": "vscode-qcfg.tasks.json",
        "url": "./tasks.schema.json"
      }
    ],
    "commands": [
      {
        "command": "qcfg.toggleReadOnly",
        "title": "qcfg: Toggle workspace READ-ONLY"
      },
      {
        "command": "qcfg.terminal.inWorkspaceFolder",
        "title": "qcfg: Open terminal in current workspace folder"
      },
      {
        "command": "qcfg.runCommand",
        "title": "qcfg: Run command"
      },
      {
        "command": "qcfg.terminal.inFileFolder",
        "title": "qcfg: Open terminal in current file's folder"
      },
      {
        "command": "qcfg.gtags.workspace",
        "title": "qcfg: Show gtags for entire workspace"
      },
      {
        "command": "qcfg.gtags.definition",
        "title": "qcfg: Open gtags definition (current folder and up)"
      },
      {
        "command": "qcfg.search.todos",
        "title": "qcfg: search ToDos"
      },
      {
        "command": "qcfg.colors.select",
        "title": "qcfg: Select workspace color theme"
      },
      {
        "command": "qcfg.colors.persist",
        "title": "qcfg: Persist workspace color theme"
      },
      {
        "command": "qcfg.colors.clear",
        "title": "qcfg: Clear workspace color theme"
      },
      {
        "command": "qcfg.colors.inspect",
        "title": "qcfg: Open color theme file"
      },
      {
        "command": "qcfg.log.setHandlerLevel.output",
        "title": "qcfg: Select log level for OUTPUT PANEL handler"
      },
      {
        "command": "qcfg.log.setHandlerLevel.file",
        "title": "qcfg: Select log level for FILE handler"
      },
      {
        "command": "qcfg.log.setHandlerLevel.console",
        "title": "qcfg: Select log level for CONSOLE handler"
      },
      {
        "command": "qcfg.log.show",
        "title": "qcfg: Show output panel with log"
      },
      {
        "command": "qcfg.history.backward",
        "title": "qcfg: Go backward in history"
      },
      {
        "command": "qcfg.history.forward",
        "title": "qcfg: Go forward in history"
      },
      {
        "command": "qcfg.fuzzySearch",
        "title": "qcfg: Fuzzy search lines"
      },
      {
        "command": "qcfg.edit.previous",
        "title": "qcfg: Select previous text edit"
      },
      {
        "command": "qcfg.edit.next",
        "title": "qcfg: Select next text edit"
      },
      {
        "command": "qcfg.openRecent.sameWindow",
        "title": "qcfg: Open recent workspace (SAME window)"
      },
      {
        "command": "qcfg.openRecent.newWindow",
        "title": "qcfg: Open recent workspace (NEW window)"
      },
      {
        "command": "qcfg.window.focus",
        "title": "qcfg: Focus window"
      }
    ],
    "keybindings": [
      {
        "key": "alt+o",
        "command": "qcfg.edit.previous",
        "when": "editorFocus"
      },
      {
        "key": "alt+i",
        "command": "qcfg.edit.next",
        "when": "editorFocus"
      },
      {
        "key": "alt+q",
        "command": "workbench.action.closeEditorInAllGroups"
      },
      {
        "key": "ctrl+q",
        "mac": "cmd+q",
        "command": "workbench.action.toggleSidebarVisibility"
      },
      {
        "key": "ctrl+w",
        "mac": "cmd+w",
        "command": "workbench.action.togglePanel"
      },
      {
        "key": "ctrl+shift+;",
        "cmd": "cmd+shift+;",
        "command": "qcfg.runCommand"
      },
      {
        "key": "ctrl+u",
        "mac": "cmd+u",
        "command": "qcfg.gtags.workspace"
      },
      {
        "key": "ctrl+o",
        "mac": "cmd+o",
        "command": "workbench.action.navigateBack"
      },
      {
        "key": "ctrl+shift+o",
        "mac": "cmd+shift+o",
        "command": "qcfg.history.backward"
      },
      {
        "key": "ctrl+i",
        "mac": "cmd+i",
        "command": "workbench.action.navigateForward"
      },
      {
        "key": "ctrl+shift+i",
        "mac": "cmd+shift+i",
        "command": "qcfg.history.forward"
      },
      {
        "key": "ctrl+l",
        "mac": "cmd+l",
        "command": "qcfg.fuzzySearch"
      },
      {
        "key": "ctrl+k ctrl+o",
        "mac": "cmd+k cmd+o",
        "command": "qcfg.openRecent.sameWindow"
      },
      {
        "key": "ctrl+k shift+ctrl+o",
        "mac": "cmd+k shift+cmd+o",
        "command": "qcfg.openRecent.newWindow"
      }
    ],
    "configuration": {
      "title": "Qcfg configuration",
      "properties": {
        "qcfg.log.level": {
          "type": "string",
          "description": "Log level",
          "enum": ["debug", "info", "warning"]
        },
        "qcfg.configDir.global": {
          "type": "string",
          "description": "Global configuration directory for vscode-qcfg specific features (defaults to HOME directory)",
          "default": "~"
        },
        "qcfg.configDir.workspace": {
          "type": "string",
          "description": "Workspace configuration direcotry for vsdode-qcfg specific features, relative to workspace file's directory or the only folder by default",
          "default": "."
        }
      }
    },
    "problemMatchers": [
      {
        "name": "gcc-relative",
        "owner": "qcfg",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "severity": "warning",
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "message": 5
        }
      },
      {
        "name": "gcc-absolute",
        "owner": "qcfg",
        "fileLocation": "absolute",
        "severity": "warning",
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "message": 5
        }
      },
      {
        "name": "qcfg-go",
        "owner": "qcfg",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "severity": "warning",
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+): (.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "message": 4
        }
      }
    ],
    "languages": [
      {
        "id": "qcfg-log",
        "aliases": ["vscode-qcfg log"],
        "extensions": [".vscode-qcfg.log"]
      }
    ],
    "grammars": [
      {
        "language": "qcfg-log",
        "scopeName": "text.log.qcfg-log",
        "path": "./syntaxes/qcfg-log.tmLanguage.json"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "make generate && webpack --mode production && make check",
    "tsc-compile": "tsc -p .",
    "compile": "make generate && webpack --mode none --env DEBUG && make check",
    "tsc-watch": "tsc -watch -p ./",
    "webpack-watch": "webpack --mode none --watch",
    "test": "npm run compile && node ./node_modules/vscode/bin/test",
    "check": "gts check",
    "clean": "gts clean",
    "fix": "gts fix",
    "prepare": "npm run compile",
    "pretest": "npm run compile",
    "posttest": "npm run check"
  },
  "dependencies": {
    "@rushstack/ts-command-line": "^4.7.6",
    "callsites": "^3.1.0",
    "chokidar": "^3.4.3",
    "glob": "^7.1.6",
    "jayson": "^3.3.4",
    "jsonc-parser": "^2.3.1",
    "lodash": "^4.17.20",
    "minimatch": "^3.0.4",
    "node-loader": "^1.0.2",
    "node-window-manager": "^2.2.4",
    "re2": "^1.15.8",
    "shlex": "^2.0.2",
    "source-map-support": "^0.5.19",
    "sprintf-js": "^1.1.2",
    "string-format": "^2.0.0",
    "superstring": "github:sergei-dyshel/superstring#master-dev",
    "tempy": "^1.0.0",
    "tree-sitter": "^0.17.1",
    "tree-sitter-bash": "^0.16.1",
    "tree-sitter-c": "^0.16.1",
    "tree-sitter-cpp": "^0.16.0",
    "tree-sitter-go": "^0.16.0",
    "tree-sitter-lua": "^1.6.1",
    "tree-sitter-python": "^0.16.1",
    "tree-sitter-typescript": "^0.16.1",
    "tree-sitter-yaml": "^0.3.0",
    "typescript-collections": "^1.3.3",
    "vscode-languageclient": "^6.1.3"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/lodash": "^4.14.165",
    "@types/minimatch": "^3.0.3",
    "@types/mocha": "^8.0.3",
    "@types/node": "^14.14.7",
    "@types/source-map-support": "^0.5.3",
    "@types/sprintf-js": "^1.1.2",
    "@types/string-format": "^2.0.0",
    "@types/vscode": "^1.51.0",
    "@types/webpack": "^4.41.24",
    "@typescript-eslint/eslint-plugin": "^4.7.0",
    "@typescript-eslint/parser": "^4.7.0",
    "deepmerge": "^4.2.2",
    "eslint": "^7.13.0",
    "eslint-config-airbnb": "^18.2.1",
    "eslint-config-prettier": "^6.15.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jsx-a11y": "^6.4.1",
    "eslint-plugin-only-warn": "^1.0.2",
    "eslint-plugin-react": "^7.21.5",
    "eslint-plugin-react-hooks": "^4.2.0",
    "gts": "^3.0.2",
    "ifdef-loader": "^2.1.5",
    "json-merger": "^1.1.2",
    "ts-json-schema-generator": "^0.77.0",
    "ts-loader": "^8.0.11",
    "ts-node": "^9.0.0",
    "ts-prune": "^0.8.4",
    "ts-unused-exports": "^6.2.4",
    "tslint": "^5.20.1",
    "tslint-config-airbnb": "^5.11.2",
    "tslint-config-prettier": "^1.18.0",
    "tslint-config-standard": "^9.0.0",
    "tslint-consistent-codestyle": "^1.16.0",
    "tslint-eslint-rules": "^5.4.0",
    "tslint-microsoft-contrib": "^6.2.0",
    "typescript": "^4.0.5",
    "vscode-languageserver": "^6.1.1",
    "vscode-test": "^1.4.1",
    "webpack": "^5.4.0",
    "webpack-cli": "^4.2.0"
  }
}
